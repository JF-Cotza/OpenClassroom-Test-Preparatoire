


@mixin rotation{
    transform-origin: bottom left;
    animation: rotate 3s ease-in-out both;
}

@keyframes rotate {
    0%{
        transform: rotateZ(0deg);
    }
    25%{
        transform: rotateZ(-5deg);
    }
    30%, 35%{
        transform: rotateZ(0deg);
    }
    50%{
        transform: rotateZ(-10deg);
    }
    55%, 60%{
        transform: rotateZ(0deg);
    }
    100%{
        transform: rotateZ(-30deg);
    }
}

@mixin animation($height,$fontsize,$top) {
    $color:silver;
    .load{
        width: 6*$height;
        height: 3*$height;
        position: relative;
        .container{
            display: flex;
            justify-content: space-around;
        }
        .couvercle{
            @include rotation;      
            position: absolute;
            top:0;
            left:$height;
            z-index: 2;
            .prise{
                height: $height;
                width: $height;
                margin: auto;
                background: $color;
                border-radius: 50%;
            }
            .cloche{
                height: $height;
                width: 4*$height;
                border-top-left-radius: $height;
                border-top-right-radius: $height;
                margin: auto;
                background: $color;
            }
        }
        .texte{
            width: 100%;
            position: absolute;
            top:1.3*$height;
            text-align: center;
            left: 0;
            p{          
                font-size:$fontsize;
                text-align: center;
                margin: 0;
            }
        }
        .assiette{
            position: absolute;
            top:2*$height;
            left:0;
            z-index: 1;
            margin: auto;
            
            .hautplat{
                width: 6*$height;
                height: div($height, 5);
                min-height: 2px;
                margin: auto;
                background: $color;
            }
            .basplat{       
                width:5*$height;
                height: div($height, 5);
                min-height: 2px; 
                margin: auto;
                background: $color;
            }
        }
    }
}

.bloc{
    line-height: auto;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100vh;
}

// https://askcodez.com/calculer-la-hauteur-de-la-ligne-avec-la-police-en-rem-valeur.html

@media screen and (max-width: 375px){
        /*approximativement $top:(2*$height-10*$fontsize/62.5%); en réalité, la hauteur de ligne n'est pas exacte à cause des 'pattes' des p pour commencer. il ya un facteur entre .83 et .89 environ selon les cas par défaut pris .83 ce qui donne pour la troisième valeur :
        $top: 2*$height-10*$fontsize/(62.5%*.83)
        ce calcul doit être fait à la main.
        */

        @include animation(20px,.8rem,40px);    
    }
@media screen and (min-width: 375px) and (max-width:795px){
        @include animation(50px,1.3rem,100px ); 
    }

@media screen and (min-width: 795px){
    @include animation(100px,2rem,200px);
}

